https://leetcode.com/problems/word-ladder/description/

class Solution {
    public int ladderLength(String beginWord, String endWord, List<String> wordList) {
        Set<String> set = new HashSet<String>(wordList);    //查一下list和set的转换，以及add，contains等函数区别
        if(!set.contains(endWord)) return 0;
        
        Set<String> a = new HashSet<String>();
        Set<String> b = new HashSet<String>();
        a.add(beginWord);
        b.add(endWord);
        int res = 0;
        

        while(!a.isEmpty()){
            if(a.size() > b.size()){
                Set<String> temp = a;
                a = b;
                b = temp;
            }
            res++;
            
            Set<String> temp = new HashSet<String>();   //想一下这个地方，为什么不能再while前面new（temp也在while下面的if中用过）
            
            for(String word: a){
                for(int i = 0; i < word.length(); i++){
                    char[] chars = word.toCharArray();  //记一下这个用法
                    for(int j = 0; j < 26; j++){
                        chars[i] = (char)('a' + j);     //记一下这个用法
                        String t = new String(chars);     //记一下这个用法
                        if(b.contains(t)) return res + 1;
                        if(!set.contains(t)) continue;
                        temp.add(t);
                        set.remove(t);
                    }
                }
            }
            a = temp;
        }
        return 0;
    }
}
