https://leetcode.com/problems/min-stack/description/

用两个栈，一个正常存储，一个存对应的最小值

class MinStack {
    
    Stack<Integer> s1;
    Stack<Integer> s2;
    /** initialize your data structure here. */
    public MinStack() {
        s1 = new Stack<Integer>();
        s2 = new Stack<Integer>();
    }
    
    public void push(int x) {
        if(s2.isEmpty() || x <= s2.peek()){
            s2.push(x);
        }
        s1.push(x);
    }
    
    public void pop() {
        if(s1.pop().equals(s2.peek())){      //用什么用equals，用==为什么不可以
            s2.pop();
        }
    }
    
    public int top() {
        return s1.peek();
    }
    
    public int getMin() {
        return s2.peek();
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(x);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
